/*************************************************************************
1.项目名称 ： 指令发生器 
2.主控芯片 ： STM32F103VET6 (100Pin)

3.硬件使用情况 ： 
      3.1 定时器 ： 
									TIM 3 : ADC采样频率事件触发 ， 采样频率 ：1KHz       ,每次触发每路ADC采样一次
									TIM 4 : PWM调节电压输出 ， PWM输出频率  ：1.2KHz     ,这个时候 72M/1.2K = 60000 对应于 100% 占空比
									TIM 5 : Signal输出脉宽调节  ， 步进为   ：1ms        ,由于FET的关断时间比较长 ，实际输出比设置的多450us
									TIM 6 : MODBUS帧数据间定时（4字节时间） ：2ms - 50ms ,最小时间为 2ms
									TIM 7 : 主函数延时查询函数定时，基准时间：2ms        
			 
			 3.2 ADC   ：
			            ADC3  : TIM 3 CC1的事件触发ADC3的采样 ，使用间断模式 ,
									        每 1ms 3通道采样一次 （ channel11 ,channel12 ,channel13 ）
													实际3通道使用的为扫描方式 ，扫描频率为 ：72M / 8 / ( 28.5 + 12.5 ) .
													先采样Channel13 ，再采样Channel12 ，最后采样Channel11 ，方便后续的数据处理
													（3路ADC采集的为同一输出电压的分压 ，对于输出电压确定时,Channel13 > Channel12 > Channel11 )
																								
			 3.3 USART :
									USART2: 串行实现modbust通信 （发送与接收都使用DMA方式 ）,DMA方式发送完成时实际还有两个字节没有发送出去 ，
									         还保留在	USART2 的寄存器里 和移位寄存器里 ，所以在DMA发送完成后还需要打开USART2发送完成中断 ，对
													 发送完成中断进行计数 ，2次中断完成后才是一帧数据真正发送完成 ，此时才可以把RS485转为接收模式 
													 
4.GPIO 使用情况 ： 
			4.1  20个通道的导通控制引脚 ：
									PD7  : 1 通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD6  : 2 通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD5  : 3 通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD4  : 4 通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD3  : 5 通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD2  : 6 通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD1  : 7 通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD15 : 8 通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD14 : 9 通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD13 : 10通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD12 : 11通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD11 : 12通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD10 : 13通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PD9  : 14通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PE15 : 15通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PE14 : 16通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PE13 : 17通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PE12 : 18通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PE11 : 19通道控制引脚 ， 高电平导通 ，低电平通道关闭
									PE10 : 20通道控制引脚 ， 高电平导通 ，低电平通道关闭

			4.2  FET控制输出引脚 ：
									PD0  : 控制脉宽（实际是控制FET的导通与关断） ，高电平开输出 ，低电平关断输出 
			
			4.3  信号类型引脚控制 ：
									PE9  :在PE8为低电平时 ，PE9高电平输出负脉冲 ，低电平输出正脉冲
									PE8  :在FET管关断的条件下，PE8为高电平开关闭合 ，PE8为低电平时开关断开 

      4.4  RS485控制端：
									PA1  :RS485接受发送的控制端 ，高电平发送模式 ，低电平接收模式 

			4.5  USART2：
									PA2  : USART2 Tx (PA.02)
									PA3  : USART2 Rx (PA.03)

			4.6  ADC3  ：
									PC1  : 采集 0 - 52.5V的电压
									PC2  : 采集 0 - 22.4V的电压
									PC3  : 采集 0 - 12.9V的电压

			4.7  TIM 4 PWM输出引脚 ：
			            PB6  : TIM4 channel 1


5.中断使用情况：
   	5.1 中断优先级配置 ：NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);                       
    5.2 优先级：
		      5.2.1 USART2 接收DMA方式下 总线空闲中断   ：  0 --> 2
		      5.2.2 USART2 发送DMA方式下 发送完成中断   ：  0 --> 3
		      5.2.3 MODBUS 帧数据结束计数中断  TIME6    ：  2 --> 1
		      5.2.4 脉冲输出脉宽计时中断       TIME5    ：  1 --> 2
		      5.2.5 主函数查询延时中断         TIME7    ：  3 --> 3
  

6.硬件需改善的地方 ：
     6.1  增加开关电源的最小负载(功率电阻)
     6.2  在开关电源的反馈回路中R9的两端并联一个电容（耐压值 ：100v ），有利于减小纹波
     6.3  在开关电源的输入输出分别加一个耐压值为100V的瓷介电容（ 可不加 ） ,C21为60V的输入端的瓷介电容
     6.4  去掉TL431 基准电压电路中的Q1 ，存在Q1增大了基准电压纹波
     6.4  去掉TL431 基准电压电路中的电位器 R7
     6.5  C1 ,C2,C26 三个电容的封装改为 ：0805封装
     6.6  12V 和 60V输入电源 两端分别接入一个保护二极管 IN4007
		 6.7  增加一路对输入60V电压的ADC采集通路
		 6.8  需要改用千分之一精度的几个电阻
						基准电压TL431的反馈电阻 ： R6 : 680R  
						                           R8 : 2K
					  ADC3电压采集的分压电阻  ： R14,R15,R16 :30K
																			 R23: 10K
																			 R24: 5.1K
																			 R25: 2K	 
     6.9  更改两个FET管的布局 ，防止两FET管散热面接触短路
		      以及功率电阻R19的摆放 ，建议躺着放置  
		 6.10 如果需要产生5V以下的电压可以考虑从输入的12V电压转换得到(加一路继电器通道切换)
		 6.11 在FET管输出端需加一个电阻下拉到地（但和开关信号类型冲突）
		 6.12 注意60V电压指示灯的布线 ，在测试时容易与地线短接冒火花
		 6.13 注意接口端子的尺寸
     6.14 存在问题 ：FET管的关断时间约为450us（解决方案待求）

7.软件需改善的地方 ：
     7.1  当主机设置的参数有合格时，如 ：上位机发给我的输出电压为600（即输出60.0V的电压脉冲 ，实际最大输出为50.0V），
		      此时电压调节就不可能成功，也就不可能输出电压脉冲 ，此时程序将不能处理下一帧的数据 ，
					现在的解决方案是从开始调节到电压开始输出设置了一个超时（10s），在这段时间里没有触发
					脉冲信号的输出就强制切换到接受下一帧数据 . 在这个时候是否需要再设置一个状态位供主机查看
					（有电压输入有误 ，脉冲时间输入有误，通道数输入有误 ，及调节未成功） 			




*************************************************************************/





